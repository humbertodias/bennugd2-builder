name: CD

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-x86_64
            docker_image: hldtux/bennugd2-linux-x86_64
            build_cmd: |
              cd BennuGD2/vendor && ./build-sdl-gpu.sh linux clean
              cd .. && ./build.sh linux clean
              tar -czvf /workspace/bgd2-linux-x86_64.tar.gz -C /workspace/BennuGD2/build/linux-gnu/bin .
          - name: switch-aarch64
            docker_image: hldtux/bennugd2-switch-aarch64
            build_cmd: |
              cd BennuGD2/vendor && ./build-sdl-gpu.sh switch clean
              cd .. && ./build.sh switch clean
              tar -czvf /workspace/bgd2-switch-aarch64.tar.gz -C /workspace/BennuGD2/build/aarch64-none-elf/bin .
          - name: android-arm64
            docker_image: hldtux/bennugd2-android-arm64
            build_cmd: |
              cd BennuGD2 && chmod +x /usr/local/bin/build-android.sh && /usr/local/bin/build-android.sh
              tar -czvf /workspace/bgd2-android-arm64.tar.gz -C /workspace/BennuGD2/vendor/android/aarch64-linux-android/arm64-v8a/lib .

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt update -y && sudo apt install -y zip make

      - name: Clone BennuGD2 source
        run: git clone --recursive --depth 1 https://github.com/SplinterGU/BennuGD2.git BennuGD2

      - name: Build and Package (${{ matrix.name }})
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace ${{ matrix.docker_image }} \
            -c "${{ matrix.build_cmd }}"

      - name: Upload artifact (${{ matrix.name }})
        uses: actions/upload-artifact@v4
        with:
          name: bgd2-${{ matrix.name }}
          path: bgd2-${{ matrix.name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/**/*.tar.gz
